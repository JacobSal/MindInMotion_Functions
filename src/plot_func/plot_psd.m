function [ax,Pa,Li] = plot_psd(ax,psd_dat,freqs,varargin)
%GROUP_VIOLIN Summary of this function goes here
% CAT CODE
%  _._     _,-'""`-._
% (,-.`._,'(       |\`-/|
%     `-.-' \ )-`( , o o)
%           `-    \`_`"'-
% Code Designers: Chang Liu, Jacob Salminen
% Code Date: 07/17/2023, MATLAB 2020b
% Written by Chang - 2023-4-15 to run plotERSP with parallel processing
% output are saved as mat
% Copyright (C) Chang Liu,
% Copyright (C) Jacob Salminen, jsalminen@ufl.edu
%## TIME
tt = tic();
%## DEFINE DEFAULTS
Pa = [];
Li = [];
%--
% prc_ylim = [min([psd_dat{:}]),max([psd_dat{:}])];
% prc_ylim = [min(psd_dat,[],'all'),max(psd_dat,[],'all')];
DEF_PLOT_STRUCT = struct('y_label',{'10*log_{10}(PSD)'},...
    'y_label_fontsize',12,...
    'y_label_fontweight','bold',...
    'ylim',[],...
    'x_label',{'Frequency (Hz)'},...
    'x_label_fontsize',12,...
    'x_label_fontweight','bold',...
    'x_label_yoffset',-0.1,...
    'xtick_labs',{{}}, ...
    'xticks',[], ...
    'xlim',[],...
    'title',{{''}},...
    'title_fontsize',12,...
    'title_fontweight','normal',...
    'font_size',12,...
    'font_name','Arial',...
    'ax_position',[0,0,1,1],...
    'ax_line_width',1,...
    'xtick_angle',45);
DEF_LINE_STRUCT = struct('line_width',2, ...
    'line_style','-', ...
    'line_alpha',1, ...
    'line_color',[1,1,1], ...
    'line_label',{'label'}, ...
    'line_avg_fcn',@mean, ...
    'line_avg_fcn_params',{{2}}, ...
    'do_err_shading',true, ...
    'err_alpha',0.6, ...
    'err_color',[0.5,0.5,0.5], ...
    'err_edge_color',[], ...
    'err_upr_bnd_fcn',@(x,p) 1*std(x,p{:}), ...
    'err_lwr_bnd_fcn',@(x,p) -1*std(x,p{:}), ...
    'err_upr_bnd_params',{{[],2}}, ...
    'err_lwr_bnd_params',{{[],2}}, ...
    'err_line_style',':', ...
    'err_line_width',3);
%## Define Parser
p = inputParser;
%## REQUIRED
addRequired(p,'ax',@(x) isgraphics(x))
addRequired(p,'psd_dat',@isnumeric);
addRequired(p,'freqs',@isnumeric);
%## OPTIONAL

%## PARAMETER
addParameter(p,'PLOT_STRUCT',DEF_PLOT_STRUCT,@(x) validate_struct(x,DEF_PLOT_STRUCT));
addParameter(p,'LINE_STRUCT',DEF_LINE_STRUCT,@(x) validate_struct(x,DEF_LINE_STRUCT));
%##
parse(p,ax,psd_dat,freqs,varargin{:});
%## SET DEFAULTS
PLOT_STRUCT = p.Results.PLOT_STRUCT;
PLOT_STRUCT = set_defaults_struct(PLOT_STRUCT,DEF_PLOT_STRUCT);
LINE_STRUCT = p.Results.LINE_STRUCT;
LINE_STRUCT = set_defaults_struct(LINE_STRUCT,DEF_LINE_STRUCT);
% if isempty(LINE_STRUCT.err_edge_color)
%     LINE_STRUCT.err_edge_color = 'none';
% end
%% ===================================================================== %%
hold on;
%## PLOT TRACE && ERROR SHADING
if LINE_STRUCT.do_err_shading
    [~,dim] = min(size(psd_dat));
    [ax,Pa,Li] = cus_jackknife_sung(ax,freqs, ...
        LINE_STRUCT.line_avg_fcn(psd_dat,LINE_STRUCT.line_avg_fcn_params), ...
        cat(dim,LINE_STRUCT.err_lwr_bnd_fcn(psd_dat,LINE_STRUCT.err_lwr_bnd_params), ...
        LINE_STRUCT.err_upr_bnd_fcn(psd_dat,LINE_STRUCT.err_upr_bnd_params)), ...
        'LINE_STRUCT',LINE_STRUCT); %#ok<ASGLU>
    hold on;
end

%## LINE
Li = plot(freqs,LINE_STRUCT.line_avg_fcn(psd_dat,LINE_STRUCT.line_avg_fcn_params), ...
    'LineWidth',LINE_STRUCT.line_width, ...
    'LineStyle',LINE_STRUCT.line_style, ...
    'DisplayName',LINE_STRUCT.line_label);
set(Li,'Color',[LINE_STRUCT.line_color,LINE_STRUCT.line_alpha]);

%## STATS
% [axsignif,Pa] = plot_psd_stats(ax, freqs, pcond, 'background', 'Frequency (Hz)');

%## set figure color, units, and size
ylabel(ax,PLOT_STRUCT.y_label);
xlabel(ax,PLOT_STRUCT.x_label);
% legend(Li);
%-- set axes units, and size
if isempty(ax)
    ax = gca;
end
set(ax,'box','off', ...
    'LineWidth',PLOT_STRUCT.ax_line_width, ...
    'FontName',PLOT_STRUCT.font_name, ...
    'FontSize',PLOT_STRUCT.font_size, ...
    'OuterPosition',[0 0 1 1], ...
    'Position',PLOT_STRUCT.ax_position);  %[left bottom width height] This I what I added, You need to play with this
%-- xlabel
xlh = xlabel(ax,PLOT_STRUCT.x_label, ...
    'Units','normalized',...
    'FontSize',PLOT_STRUCT.x_label_fontsize, ...
    'FontWeight',PLOT_STRUCT.x_label_fontweight);
pos1=get(xlh,'Position');
pos1(1,2)=pos1(1,2)+PLOT_STRUCT.x_label_yoffset;
set(xlh,'Position',pos1);
%-- xticks
if ~isempty(PLOT_STRUCT.xlim)
    set(ax,'XLim',PLOT_STRUCT.xlim)
end
if ~isempty(PLOT_STRUCT.xticks)
    set(ax,'XTick',sort(PLOT_STRUCT.xticks));
end
if ~isempty(PLOT_STRUCT.xtick_labs)
    set(ax,'XTickLabel',PLOT_STRUCT.xtick_labs);
end
xtickangle(PLOT_STRUCT.xtick_angle);
%-- set ylabel
ylabel(ax,PLOT_STRUCT.y_label, ...
    'FontSize',PLOT_STRUCT.y_label_fontsize,...
    'FontWeight',PLOT_STRUCT.y_label_fontweight);
if ~isempty(PLOT_STRUCT.ylim)
    ylim(ax,PLOT_STRUCT.ylim);
end
%-- title
title(ax,PLOT_STRUCT.title, ...
    'FontSize',PLOT_STRUCT.title_fontsize,...
    'FontWeight',PLOT_STRUCT.title_fontweight);      
%-- time
fprintf('done. plot_psd.m %0.2g s\n',toc(tt));
end